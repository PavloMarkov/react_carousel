{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","transform","transformNext","param","transformPrev","props","images","frameSize","itemWidth","step","maxTransform","length","this","animationDuration","className","style","width","transition","map","image","index","src","alt","uuidv4","type","onClick","setState","Component","App","changeWidth","e","Number","target","value","changeNumberOfImg","changeScrollNumber","changeDurationAnimation","htmlFor","id","placeholder","onChange","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.57d604ed.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface Props {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n}\n\ninterface State {\n  transform: number;\n}\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    transform: 0,\n  };\n\n  transformNext = (param: string): State => {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      step,\n    } = this.props;\n\n    const { transform } = this.state;\n\n    let transformPrev;\n    const maxTransform = -1\n    * (images.length - frameSize) * itemWidth;\n\n    if (param === 'add' && transform < 0) {\n      transformPrev = transform\n      + (itemWidth * step);\n      if (transformPrev > 0) {\n        transformPrev = 0;\n      }\n    } else if (param === 'dev') {\n      transformPrev = transform - (itemWidth * step);\n      if (transformPrev < maxTransform) {\n        transformPrev = maxTransform;\n      }\n    } else {\n      transformPrev = 0;\n    }\n\n    return { transform: transformPrev };\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.props;\n\n    const { transform } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${itemWidth * frameSize}px`,\n          }}\n        >\n          <div\n            className=\"container\"\n            style={{\n              transform: `translateX(${transform}px)`,\n              transition: `transform ${animationDuration}ms ease`,\n            }}\n          >\n            {images.map((image, index) => (\n              <li\n                key={uuidv4()}\n              >\n                <img\n                  src={image}\n                  alt={`${index + 1}`}\n                  style={{\n                    width: `${itemWidth}px`,\n                  }}\n                />\n              </li>\n            ))}\n          </div>\n        </ul>\n\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState(this.transformNext('add'));\n            }}\n          >\n            Prev\n          </button>\n\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={() => {\n              this.setState(this.transformNext('dev'));\n            }}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  changeWidth = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      itemWidth: Number(e.target.value),\n    });\n  };\n\n  changeNumberOfImg = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (+e.target.value <= this.state.images.length) {\n      this.setState({\n        frameSize: Number(e.target.value),\n      });\n    }\n  };\n\n  changeScrollNumber = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      step: Number(+e.target.value),\n    });\n  };\n\n  changeDurationAnimation = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      animationDuration: Number(+e.target.value),\n    });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1\n          data-cy=\"title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n        />\n\n        <label htmlFor=\"itemId\">\n          Enter width of images\n          <input\n            type=\"number\"\n            value={itemWidth}\n            id=\"itemId\"\n            placeholder=\"item width\"\n            onChange={this.changeWidth}\n          />\n        </label>\n        <br />\n        <label htmlFor=\"frameId\">\n          Enter number of images in a row\n          <input\n            type=\"number\"\n            value={frameSize}\n            id=\"frameId\"\n            placeholder=\"frame size\"\n            onChange={this.changeNumberOfImg}\n          />\n        </label>\n        <br />\n        <label htmlFor=\"stepId\">\n          Enter number of images to scroll\n          <input\n            type=\"number\"\n            value={step}\n            id=\"stepId\"\n            placeholder=\"step\"\n            onChange={this.changeScrollNumber}\n          />\n        </label>\n        <br />\n        <label htmlFor=\"animationId\">\n          Enter the duration of rotation\n          <input\n            type=\"number\"\n            value={animationDuration}\n            id=\"animationId\"\n            placeholder=\"step\"\n            onChange={this.changeDurationAnimation}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}