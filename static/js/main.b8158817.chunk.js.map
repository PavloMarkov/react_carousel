{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","transform","transformNext","param","transformPrev","maxTransform","props","images","length","frameSize","itemWidth","step","this","animationDuration","className","style","width","transition","map","image","index","src","alt","uuidv4","type","onClick","setState","Component","App","changeWidth","e","Number","target","value","changeNumberOfImg","changeScrollNumber","changeDurationAnimation","htmlFor","id","placeholder","onChange","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8158817.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface Props {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n}\n\ninterface State {\n  transform: number;\n}\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    transform: 0,\n  };\n\n  transformNext = (param: string): State => {\n    let transformPrev;\n    const maxTransform = -1\n    * (this.props.images.length - this.props.frameSize) * this.props.itemWidth;\n\n    if (param === 'add' && this.state.transform < 0) {\n      transformPrev = this.state.transform\n      + (this.props.itemWidth * this.props.step);\n      if (transformPrev > 0) {\n        transformPrev = 0;\n      }\n    } else if (param === 'dev') {\n      transformPrev = this.state.transform\n      - (this.props.itemWidth * this.props.step);\n      if (transformPrev < maxTransform) {\n        transformPrev = maxTransform;\n      }\n    } else {\n      transformPrev = 0;\n    }\n\n    return { transform: transformPrev };\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.props;\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${itemWidth * frameSize}px`,\n          }}\n        >\n          <div\n            className=\"container\"\n            style={{\n              transform: `translateX(${this.state.transform}px)`,\n              transition: `transform ${animationDuration}ms ease`,\n            }}\n          >\n            {images.map((image, index) => (\n              <li\n                key={uuidv4()}\n              >\n                <img\n                  src={image}\n                  alt={`${index + 1}`}\n                  style={{\n                    width: `${itemWidth}px`,\n                  }}\n                />\n              </li>\n            ))}\n          </div>\n        </ul>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState(this.transformNext('add'));\n          }}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          onClick={() => {\n            this.setState(this.transformNext('dev'));\n          }}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  changeWidth = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      itemWidth: Number(e.target.value),\n    });\n  };\n\n  changeNumberOfImg = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (+e.target.value <= this.state.images.length) {\n      this.setState({\n        frameSize: Number(e.target.value),\n      });\n    }\n  };\n\n  changeScrollNumber = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      step: Number(+e.target.value),\n    });\n  };\n\n  changeDurationAnimation = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      animationDuration: Number(+e.target.value),\n    });\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1\n          data-cy=\"title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={this.state.images}\n          itemWidth={this.state.itemWidth}\n          frameSize={this.state.frameSize}\n          step={this.state.step}\n          animationDuration={this.state.animationDuration}\n        />\n\n        <label htmlFor=\"itemId\">\n          Enter width of images\n          <input\n            type=\"text\"\n            id=\"itemId\"\n            placeholder=\"item width\"\n            onChange={this.changeWidth}\n          />\n        </label>\n        <br />\n        <label htmlFor=\"frameId\">\n          Enter number of images in a row\n          <input\n            type=\"number\"\n            value={this.state.frameSize}\n            id=\"frameId\"\n            placeholder=\"frame size\"\n            onChange={this.changeNumberOfImg}\n          />\n        </label>\n        <br />\n        <label htmlFor=\"stepId\">\n          Enter number of images to scroll\n          <input\n            type=\"number\"\n            value={this.state.step}\n            id=\"stepId\"\n            placeholder=\"step\"\n            onChange={this.changeScrollNumber}\n          />\n        </label>\n        <br />\n        <label htmlFor=\"animationId\">\n          Enter the duration of rotation\n          <input\n            type=\"number\"\n            value={this.state.animationDuration}\n            id=\"animationId\"\n            placeholder=\"step\"\n            onChange={this.changeDurationAnimation}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}